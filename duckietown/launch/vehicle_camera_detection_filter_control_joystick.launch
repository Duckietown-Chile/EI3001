<launch>
	<arg name="veh" doc="Name of vehicle" />
	<arg name="local" default="false" />
	<arg name="config" default="baseline" doc="Specify a config."/>
    <arg name="param_file_name" default="default" doc="Specify a param file. ex:megaman." />
    <arg name="joy_mapper_param_file_name" default="$(arg param_file_name)" doc="Specify a joy_mapper param file. ex:high_speed" />

	<!-- Camera Node -->
	<include unless="$(arg local)" file="$(find duckietown)/launch/camera.launch">	
		<arg name="veh" value="$(arg veh)"/>
	</include>
	<remap from="decoder_node/compressed_image" to="camera_node/image/compressed"/>
	<include file="$(find pi_camera)/launch/decoder_node.launch">
    	<arg name="veh" value="$(arg veh)"/> 
    	<arg name="local" value="$(arg local)"/> 
    </include>


	<!-- Vehicle Detection Package -->
	<remap from="vehicle_detection_node/image" to="decoder_node/image/raw" />
	<remap from="vehicle_filter_node/camera_info" to="camera_node/camera_info" />
	<remap from="vehicle_filter_node/corners" to="vehicle_detection_node/corners" />
	<remap from="vehicle_avoidance_control_node/vehicle_pose" to="vehicle_filter_node/pose"/>
	<remap from="vehicle_avoidance_control_node/detection" to="vehicle_detection_node/detection"/>
	<remap from="vehicle_avoidance_control_node/car_cmd_in" to="joy_mapper_node/car_cmd"/>
	
	<!-- Vehicle Detection Node -->
	<include file="$(find vehicle_detection)/launch/vehicle_detection_node.launch">
		<arg name="veh" value="$(arg veh)"/>
		<arg name="local" value="$(arg local)" />
	</include>
	
	<!-- Vehicle Filter Node -->
	<include file="$(find vehicle_detection)/launch/vehicle_filter.launch">
		<arg name="veh" value="$(arg veh)"/>
		<arg name="local" value="$(arg local)" />
	</include>	

	<!-- Vehicle Control Node -->
	<include file="$(find vehicle_detection)/launch/vehicle_avoidance_control_node.launch" >
		<arg name="veh" value="$(arg veh)"/>
		<arg name="local" value="$(arg local)" />
	</include>
	
	    <include file="$(find duckietown)/machines"/>
    <!-- joy -->
    <node ns="$(arg veh)" if="$(arg local)" pkg="joy" type="joy_node" name="joy" output="screen">
        <rosparam command="load" file="$(find duckietown)/config/$(arg config)/joy/joy_node/$(arg param_file_name).yaml"/>
    </node>
    <node ns="$(arg veh)" unless="$(arg local)" machine="$(arg veh)" pkg="joy" type="joy_node" name="joy" output="screen">
        <rosparam command="load" file="$(find duckietown)/config/$(arg config)/joy/joy_node/$(arg param_file_name).yaml"/>
    </node>

    <!-- joy_mapper -->
    <include file="$(find joy_mapper)/launch/joy_mapper_node.launch">
        <arg name="veh" value="$(arg veh)"/>
        <arg name="local" value="$(arg local)"/>
        <arg name="config" value="$(arg config)"/>
        <arg name="param_file_name" value="$(arg joy_mapper_param_file_name)"/>
    </include>

    <!-- run inverse_kinematics_node -->
    <remap from="inverse_kinematics_node/car_cmd" to="vehicle_avoidance_control_node/car_cmd"/>
    <remap from="inverse_kinematics_node/wheels_cmd" to="wheels_driver_node/wheels_cmd" />
    <include file="$(find dagu_car)/launch/inverse_kinematics_node.launch">
        <arg name="veh" value="$(arg veh)"/>
        <arg name="local" value="$(arg local)"/>
        <arg name="config" value="$(arg config)"/>
    </include>
    
        <!-- Wheels Driver -->
    <include file="$(find dagu_car)/launch/wheels_driver_node.launch">
        <arg name="veh" value="$(arg veh)"/>
    </include>
</launch>